<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Subaccount extends \App\Entities\Subaccount implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'compromisedCredit', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'credit', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'account', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'area', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'orders', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'created', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'updated'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'compromisedCredit', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'credit', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'account', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'area', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'orders', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'created', '' . "\0" . 'App\\Entities\\Subaccount' . "\0" . 'updated'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Subaccount $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccount(\App\Entities\Account $account)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccount', [$account]);

        return parent::setAccount($account);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccount', []);

        return parent::getAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setArea(\App\Entities\Area $area)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArea', [$area]);

        return parent::setArea($area);
    }

    /**
     * {@inheritDoc}
     */
    public function getArea()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArea', []);

        return parent::getArea();
    }

    /**
     * {@inheritDoc}
     */
    public function increaseCredit(float $credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseCredit', [$credit]);

        return parent::increaseCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function decreaseCredit(float $credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'decreaseCredit', [$credit]);

        return parent::decreaseCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function increaseCompromisedCredit(float $credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseCompromisedCredit', [$credit]);

        return parent::increaseCompromisedCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function decreaseCompromisedCredit(float $credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'decreaseCompromisedCredit', [$credit]);

        return parent::decreaseCompromisedCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function setCompromisedCredit(float $credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompromisedCredit', [$credit]);

        return parent::setCompromisedCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompromisedCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompromisedCredit', []);

        return parent::getCompromisedCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredit(float $credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredit', [$credit]);

        return parent::setCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredit', []);

        return parent::getCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableCredit', []);

        return parent::getAvailableCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrder(\App\Entities\Order $order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrder', [$order]);

        return parent::addOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrders', []);

        return parent::getOrders();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcronym()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcronym', []);

        return parent::getAcronym();
    }

    /**
     * {@inheritDoc}
     */
    public function getLCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLCode', []);

        return parent::getLCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getSerial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerial', []);

        return parent::getSerial();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(\Datetime $created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated(\Datetime $updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeName', []);

        return parent::getTypeName();
    }

    /**
     * {@inheritDoc}
     */
    public function updateTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateTimestamps', []);

        return parent::updateTimestamps();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}

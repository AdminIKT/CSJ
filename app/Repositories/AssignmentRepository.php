<?php

namespace App\Repositories;

use App\Entities;

/**
 * AssignmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AssignmentRepository extends \Doctrine\ORM\EntityRepository
{
    use \LaravelDoctrine\ORM\Pagination\PaginatesFromRequest;

    /**
     *
     */
    function search(
        $year     = null,
        $area     = null,
        $type     = null,
        $op       = null,
        $credit   = null,
        $sortBy   = "created", 
        $sort     = "desc", 
        $perPage  = 10, 
        $pageName = "page")
    {
        $builder = $this->createQueryBuilder('a');

        if ($year !== null) {
            $builder->andWhere("YEAR(a.created) = :year")
                    ->setParameter('year', $year);
        }
        if ($area !== null) {
            $builder->andWhere("a.area = :area")
                    ->setParameter('area', $area);
        }
        if ($type !== null) {
            $builder->andWhere("a.type = :type")
                    ->setParameter('type', $type);
        }
        if ($credit !== null) {
            $builder->andWhere("a.credit {$op} :credit")
                    ->setParameter('credit', $credit);
        }

        $builder->orderBy("a.{$sortBy}" , $sort);

        //dd($builder->getQuery()->getSql(), $builder->getQuery()->getParameters());
        if ($perPage !== null) {
            return $this->paginate($builder->getQuery(), $perPage, $pageName);
        }

        return $builder->getQuery()->getResult();
    }

    /**
     * @return array
     */
    function years(Entities\Area $area = null)
    {
        $sql  = "SELECT DISTINCT(YEAR(a.created)) as years FROM App\Entities\Assignment a ";
        if ($area) 
        $sql .= "WHERE a.area = :area ";
        $sql .= "GROUP BY years ORDER BY years DESC";

        $query = $this->getEntityManager()
                      ->createQuery($sql);
        if ($area)
        $query->setParameter('area', $area->getId());

        return $query->getResult(\Doctrine\ORM\AbstractQuery::HYDRATE_SCALAR_COLUMN);
    }
}
